name: Central Policy Deployment (Multi-Tenant)

on:
  workflow_dispatch:   # Manual trigger
  push:
    branches: [ main ] # Optional auto-trigger

permissions:
  contents: read       # Needed for checkout

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y jq
        az extension add --name managementgroups --yes || true

    - name: Deploy policies
      run: |
        set -euxo pipefail
        TENANTS_FILE=tenants.json

        if [ ! -f "$TENANTS_FILE" ]; then
          echo "Missing tenants.json!"
          exit 1
        fi

        jq -c '.[]' "$TENANTS_FILE" | while read -r t; do
          tenantId=$(echo "$t" | jq -r .tenantId)
          mgId=$(echo "$t" | jq -r .rootMG)

          echo "----> Processing tenant: $tenantId (MG: $mgId)"
          az account clear
          az login --service-principal \
            -u ${{ secrets.AZURE_CLIENT_ID }} \
            -p ${{ secrets.AZURE_CLIENT_SECRET }} \
            --tenant $tenantId \
            --allow-no-subscriptions

          currentTenant=$(az account show --query tenantId -o tsv)
          echo "Authenticated into tenant: $currentTenant"

          for file in policies/definitions/*.json; do
            if [ -f "$file" ]; then
              defName=$(basename "$file" .json)
              echo " -> Creating/updating policy definition $defName in MG $mgId"

              if az policy definition show --name "$defName" --management-group "$mgId" -o none 2>/dev/null; then
                az policy definition update \
                  --name "$defName" \
                  --definition "$file" \
                  --management-group "$mgId"
              else
                az policy definition create \
                  --name "$defName" \
                  --definition "$file" \
                  --management-group "$mgId"
              fi
            fi
          done
        done
