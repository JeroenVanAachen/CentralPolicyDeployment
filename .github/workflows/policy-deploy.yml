name: Central Policy Deployment (Multi-Tenant)

on:
  workflow_dispatch:   # Manual trigger for testing
  push:
    branches: [ main ] # Optional auto-trigger on push

permissions:
  contents: read       # Required for checkout

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y jq
        az extension add --name managementgroups --yes || true

    - name: Initial Azure Login (home tenant)
      uses: azure/login@v2
      with:
        auth-type: SERVICE_PRINCIPAL
        client-id: ${{ secrets.APP_CLIENT_ID }}
        tenant-id: ${{ secrets.APP_TENANT_ID }}
        client-secret: ${{ secrets.APP_CLIENT_SECRET }}
        allow-no-subscriptions: true

    - name: Verify initial login
      run: |
        echo "Home tenant login successful"
        az account show --query "{name:name, tenantId:tenantId, user:user}" -o json

    - name: Deploy policies to all tenants
      env:
        APP_CLIENT_ID: ${{ secrets.APP_CLIENT_ID }}
        APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
      run: |
        set -euo pipefail
        TENANTS_FILE="${GITHUB_WORKSPACE}/tenants.json"

        if [ ! -f "$TENANTS_FILE" ]; then
          echo "tenants.json not found at $TENANTS_FILE"
          exit 1
        fi

        jq -c '.[]' "$TENANTS_FILE" | while read -r t; do
          tenantId=$(echo "$t" | jq -r '.tenantId')
          mgId=$(echo "$t" | jq -r '.rootMG')
          echo "----> Processing tenant: $tenantId (MG: $mgId)"

          # Manual login to each tenant using SPN
          az account clear
          az login --service-principal -u "$APP_CLIENT_ID" -p "$APP_CLIENT_SECRET" --tenant "$tenantId"

          # Verify login
          currentTenant=$(az account show --query tenantId -o tsv)
          if [ "$currentTenant" != "$tenantId" ]; then
            echo "ERROR: failed to authenticate to tenant $tenantId"
            exit 1
          fi
          echo "Authenticated into tenant $tenantId"

          # Deploy each policy definition
          for file in policies/definitions/*.json; do
            [ -f "$file" ] || continue
            defName=$(basename "$file" .json)
            echo " -> Creating/updating policy definition $defName in MG $mgId"

            exists=$(az policy definition show --name "$defName" --management-group "$mgId" -o json 2>/dev/null || true)
            if [ -z "$exists" ]; then
              az policy definition create \
                --name "$defName" \
                --display-name "$defName" \
                --rules "$file" \
                --mode All \
                --management-group "$mgId"
            else
              az policy definition update \
                --name "$defName" \
                --rules "$file" \
                --management-group "$mgId"
            fi
          done

          echo "----> Finished tenant $tenantId"
        done
